package org.dependencytrack.persistence;

import junitparams.JUnitParamsRunner;
import junitparams.Parameters;
import org.dependencytrack.PersistenceCapableTest;
import org.dependencytrack.model.VulnerabilityAlias;
import org.junit.Test;
import org.junit.runner.RunWith;

import javax.jdo.Query;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Consumer;

import static org.assertj.core.api.Assertions.assertThat;
import static org.dependencytrack.persistence.VulnerabilityQueryManagerTest.VulnerabilityAliasBuilder.anAlias;

@RunWith(JUnitParamsRunner.class)
public class VulnerabilityQueryManagerTest extends PersistenceCapableTest {

    @Test
    @Parameters(method = "synchronizeVulnerabilityAliasTestParams")
    public void synchronizeVulnerabilityAliasTest(final List<VulnerabilityAlias> reportedAliases,
                                                  final List<VulnerabilityAlias> expectedAliases) {
        for (final VulnerabilityAlias reportedAlias : reportedAliases) {
            qm.synchronizeVulnerabilityAlias(reportedAlias);
        }

        final var aliasAsserts = new ArrayList<Consumer<VulnerabilityAlias>>();
        for (final VulnerabilityAlias expectedAlias : expectedAliases) {
            aliasAsserts.add(alias -> {
                assertThat(alias.getCveId()).isEqualTo(expectedAlias.getCveId());
                assertThat(alias.getGhsaId()).isEqualTo(expectedAlias.getGhsaId());
                assertThat(alias.getGsdId()).isEqualTo(expectedAlias.getGsdId());
                assertThat(alias.getInternalId()).isEqualTo(expectedAlias.getInternalId());
                assertThat(alias.getOsvId()).isEqualTo(expectedAlias.getOsvId());
                assertThat(alias.getSnykId()).isEqualTo(expectedAlias.getSnykId());
                assertThat(alias.getSonatypeId()).isEqualTo(expectedAlias.getSonatypeId());
                assertThat(alias.getVulnDbId()).isEqualTo(expectedAlias.getVulnDbId());
            });
        }

        final Query<VulnerabilityAlias> query = qm.getPersistenceManager().newQuery(VulnerabilityAlias.class);
        final List<VulnerabilityAlias> aliases = query.executeList();

        assertThat(aliases).hasSize(expectedAliases.size());
        assertThat(aliases).satisfiesExactlyInAnyOrder(aliasAsserts.toArray(new Consumer[0]));
    }

    private Object[] synchronizeVulnerabilityAliasTestParams() {
        return new Object[]{
                new Object[]{
                        // Reported
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-1000")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-1000")
                                        .withOsvId("GO-1000")
                                        .build()),
                        // Expected
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-1000")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-1000")
                                        .withOsvId("GO-1000")
                                        .build()),
                },
                new Object[]{
                        // Reported
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withOsvId("GO-1000")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-1000")
                                        .build()),
                        // Expected
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-1000")
                                        .withOsvId("GO-1000")
                                        .build())
                },
                new Object[]{
                        // Reported
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withOsvId("GO-1000")
                                        .build(),
                                anAlias()
                                        .withOsvId("GO-2000")
                                        .withCveId("CVE-1000")
                                        .build()),
                        // Expected
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withOsvId("GO-1000")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withOsvId("GO-2000")
                                        .build())
                },
                new Object[]{
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-2022-26945")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-2022-30321")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-2022-30322")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-2022-30323")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-28r2-q6m8-9hpx")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-cjr4-fv6c-f3mv")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-fcgg-rvwg-jv58")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-x24g-9w7v-vprh")
                                        .withOsvId("GO-2022-0586")
                                        .build()),
                        // Expected
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-2022-26945")
                                        .withOsvId("GO-2022-0586")
                                        .withGhsaId("GHSA-28r2-q6m8-9hpx")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-2022-30321")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-2022-30322")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-2022-30323")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-cjr4-fv6c-f3mv")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-fcgg-rvwg-jv58")
                                        .withOsvId("GO-2022-0586")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-x24g-9w7v-vprh")
                                        .withOsvId("GO-2022-0586")
                                        .build())
                },
                new Object[]{
                        // Reported
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-1000")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-1000")
                                        .build()),
                        // Expected
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-1000")
                                        .build()),
                },
                new Object[]{
                        // Reported
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-1000")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-1000")
                                        .withSnykId("SNYK-1000")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-1000")
                                        .withSnykId("SNYK-2000")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-2000")
                                        .build()),
                        // Expected
                        Arrays.asList(
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withGhsaId("GHSA-1000")
                                        .withSnykId("SNYK-1000")
                                        .build(),
                                anAlias()
                                        .withGhsaId("GHSA-1000")
                                        .withSnykId("SNYK-2000")
                                        .build(),
                                anAlias()
                                        .withCveId("CVE-1000")
                                        .withSnykId("SNYK-2000")
                                        .build())
                }
        };
    }

    static class VulnerabilityAliasBuilder {
        private VulnerabilityAlias alias = new VulnerabilityAlias();

        static VulnerabilityAliasBuilder anAlias() {
            return new VulnerabilityAliasBuilder();
        }

        VulnerabilityAlias build() {
            return alias;
        }

        VulnerabilityAliasBuilder withCveId(final String cveId) {
            this.alias.setCveId(cveId);
            return this;
        }

        VulnerabilityAliasBuilder withGhsaId(final String ghsaId) {
            this.alias.setGhsaId(ghsaId);
            return this;
        }

        VulnerabilityAliasBuilder withOsvId(final String osvId) {
            this.alias.setOsvId(osvId);
            return this;
        }

        VulnerabilityAliasBuilder withSnykId(final String snykId) {
            this.alias.setSnykId(snykId);
            return this;
        }
    }

}